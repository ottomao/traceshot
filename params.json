{"name":"Traceshot","tagline":"a tool for web developers to evaluate the web page loading performance visually","body":"### Intro\r\n**Traceshot** is a tool for web developers to evaluate the web page loading performance visually. By taking snapshots periodically, Traceshot will give you a collection of all the snapshots duration the loading process. The test results given by Traceshot will be more reliable and meaningful, since the test is run on a real device with a real network condition.\r\n\r\nBesides, Traceshot can be used as a server. In other words, you may establish your own real-device test server for the whole team by using some RESTful API. It is so cool, isn't it ?\r\n\r\n### Screenshots\r\n[<img src=\"http://gtms04.alicdn.com/tps/i4/TB1n6C_FVXXXXXaXpXXCKHiPpXX-2800-1600.png_760x760.jpg\" />](http://gtms04.alicdn.com/tps/i4/TB1n6C_FVXXXXXaXpXXCKHiPpXX-2800-1600.png)\r\n\r\n### Server Mode\r\n\r\nWhen working as a server, Traceshot can run tasks assigned by its RESTful API.\r\n\r\n**Features**\r\n\r\n* Traceshot won't do any callback when tasks are finished. You have to fetch the result manually. You may either fetch it by a scheduled task, or just roughly by polling.\r\n* The task result image is transferred as base64, jpg\r\n* Only one task can be dealed at the same time\r\n* There is no concept like task queue in server, you have to implement it on your http client\r\n\r\n### RESTful API of server mode\r\n\r\n#### basic form\r\n* All the apis are called with this pattern: ```http://SERVER:PORT/?action=ACTION_NAME&paraA=VALUE_A&paraB=VALUE_B``` \r\n* A sample client written in nodejs can be found in *httpClient_sample_nodejs*\r\n\r\n#### query status\r\n* Sample: query whether the test server is busy\r\n* Req: ```http://SERVER:PORT/?action=status```\r\n* Res: ```{\"success\":true,\"isIdle\":true}```\r\n\r\n\r\n#### start a task\r\n* Sample: start a test task with url *http://sample.com?t=1* , screen shot interval *0.2s* , lasts *20s*\r\n* Req: ```http://SERVER:PORT/?action=shot&url=http%3A%2F%2Fsample.com%3Ft%3D1&interval=0.2s&duration=20s```\r\n* Res-success:```\r\n{\"success\":true,\"taskId\":1}```\r\n* Res-error:```{\"success\":false,\"reason\":\"another task is on the fly now\"}```\r\n\r\n#### stop a task\r\n* Sample: stop the current task\r\n* Req: ```http://SERVER:PORT/?action=stop```\r\n* Res: ```{\"success\":true,\"stoppedTaskId\":3}```\r\n\r\n#### fetch result\r\n* Sample: fetch the result of lastest test\r\n* Req: ```http://SERVER:PORT/?action=fetch```\r\n* Res: ```{\"success\":true,\"taskId\":4,\"imgBase64\":\"data:image\\/jpeg;base64,\\/9j\\/4AAQSk...```\r\n\r\n### Contact\r\n* Author: **Otto Mao** ,from China\r\n* Email: **ottomao@gmail.com**\r\n\r\n","google":"UA-53250198-1","note":"Don't delete this file! It's used internally to help with page regeneration."}